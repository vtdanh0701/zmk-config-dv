/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

#define SUPER LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
 };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  Q      |  W      |  E      |  R      |  T      |   |  Y      |  U      |  I      |  O      |  P      |
// | GUI/A   | ALT/S   | CTRL/D  | SHIFT/F |  G      |   |  H      | SHIFT/J | CTRL/K  | ALT/L   | SEMI    |
// |  Z      |  X      |  C      |  V      |  B      |   |  N      |  M      |  ,      |  .      |  /      |
//                     | CTRL/TAB | NUM/BSP | GUI/SPC |   | GUI/RET | SYM/DEL | ALT/`   |
                        bindings = <
   &kp Q       &kp W      &kp E       &kp R        &kp T     &kp Y    &kp U        &kp I       &kp O      &kp P
   &hm LGUI A  &hm LALT S &hm LCTRL D &hm LSHFT F  &kp G     &kp H    &hm RSHFT J  &hm RCTRL K &hm RALT L &kp SEMI
   &kp Z       &kp X      &kp C       &kp V        &kp B     &kp N    &kp M        &kp COMMA   &kp DOT    &kp FSLH
        &mt LCTRL TAB &lt NUM BSPC &mt LGUI SPACE   &mt RGUI RET &lt SYM DEL &mt RALT GRAVE
                        >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  ---    | ALT←    |   ↑     | ALT→    | PG_UP   |   |   +     |  7      |  8      |  9      |  *      |
// | SUPER   |   ←     |   ↓     |   →     | PG_DN   |   |   -     |  4      |  5      |  6      |  /      |
// | SUPER2  |  ---    |  ---    | HOME    | END     |   |   0     |  1      |  2      |  3      |  .      |
//                     |  trans   | trans   | trans   |   | trans   | FUNC    | trans   |
                        bindings = <
   &none       &kp LA(LEFT) &kp UP        &kp LA(RIGHT) &kp PG_UP    &kp PLUS  &kp N7 &kp N8 &kp N9 &kp ASTRK
   &kp SUPER   &kp LEFT     &kp DOWN      &kp RIGHT     &kp PG_DN    &kp MINUS &kp N4 &kp N5 &kp N6 &kp FSLH
   &kp SUPER2  &none        &none         &kp HOME      &kp END      &kp N0    &kp N1 &kp N2 &kp N3 &kp DOT
                    &trans &trans &trans   &trans &mo FUNC &trans
                        >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  !      |  @      |  #      |  $      |  %      |   |  ^      |  &      |  *      |  (      |  )      |
// |  `      |  ~      |  '      |  "      |  ---    |   |  -      |  =      |  [      |  ]      |  \      |
// |  ~      |  ---    |  ---    |  ---    |  ---    |   |  _      |  +      |  {      |  }      |  |      |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR
   &kp GRAVE &kp TILDE &kp SQT  &kp DQT   &none        &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH
   &kp TILDE &none     &none    &none     &none        &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                    &trans &mo FUNC &trans   &trans &trans &trans
                        >;
        };
    };
};
